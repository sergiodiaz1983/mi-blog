var _            = require('underscore'),
    net          = require('net'),
    EventEmitter = require('events').EventEmitter;

var Agent = function (options) {
    options = options ? _.clone(options) : {};
    options = _.defaults(options, this.defaults);

    this.name = options.name;
    this.port = options.port;
    
    this.initializeServer();
}

_.extend(Agent.prototype, EventEmitter.prototype, {

    defaults: {
        port: 1337
    },

    initializeServer: function () {
        this.server = net.createServer(_.bind(this.onNewConnection, this));
        this.server.on('data', _.bind(this.onData, this));
        // this.server.on('')
    },

    onNewConnection: function (connection) {
        console.log("New Connection");
        this.emit('connection');
        connection.write("Hello");
        connection.pipe(connection);
    },

    onData: function (data) {
        console.log('Got data', data.toString());
        this.emit('data', data);
    },

    start: function () {
        console.log("%s started. Listening on port %s", this.name, this.port);
        this.server.listen(this.port);
        this.emit('start');
        return this;
    },

    stop: function () {
        this.connection && this.connection.end();
        this.client && this.client.end();
    },

    connectTo: function (port) {
        this.client = new net.connect({port: port}, function () {
            console.log("Connected to agent");
            this.client.write("Hello");
        }.bind(this));

        this.client.on('data', function (data) {
            console.log(data);
            this.client.end();
        }.bind(this));
    },
});

module.exports = Agent;
